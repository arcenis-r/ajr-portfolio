{
  "hash": "395d2aff419dd98ba2df386f4e64d43e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introduction to cepumd\"\nauthor: \"Arcenis Rojas\"\ndate: \"01/24/2024\"\neditor: visual\nexecute:\n  warning: false\n  error: false\nbibliography: cepumd-intro-references.bib\ncategories:\n  - Package Development\n  - Data Wrangling\n---\n\n\n## Motivation\n\n::: {layout=\"[35, 65]\"}\n![](images/cepumd.png){fig-alt=\"cepumd hexsticker\" fig-align=\"center\" width=\"300\"}\n\n::: {layout=\"[35, 65]\"}\nThe purpose of `cepumd` is to make working with Consumer Expenditure Surveys (CE) Public-Use Microdata (PUMD) easier toward calculating mean, weighted, annual expenditures (henceforth \"mean expenditures\"). The challenges `cepumd` seeks to address deal primarily with pulling together the necessary data toward this end. Some of the overarching ideas underlying the package are as follows:\n\n-   Use a [Tidyverse](https://www.tidyverse.org/) framework for most operations and be (hopefully) generally [Tidyverse](https://www.tidyverse.org/) friendly\n\n-   Balance the effort to make the end user's experience with CE PUMD easier while being flexible enough to allow that user to perform any analysis with the data they wish\n\n-   Only designed to help users calculate mean **expenditures** on and of the consumer unit (CU), i.e., not income, not assets, not liabilities, not gifts.\n:::\n:::\n\n## Overview of the CE and CE PUMD\n\nFirst a little history...\n\nThe first Consumer Expenditure Survey happened in 1888 (<https://www.bls.gov/opub/hom/cex/history.htm>), it was first used to revise CPI weights in 1972-1973, and it has been collected on a monthly basis since 1979. For a little bit more detail on the history of the CE, check out the slide deck of a presentation delivered by Steve Henderson (former Chief of the Branch of Information and Analysis) and Adam Safir (current Division Chief of CE) called [130 Years of the Consumer Expenditure Surveys (CE): 1888 - 2018](https://www.bls.gov/cex/ce-130-presentation-safir-henderson.pdf)\n\nFrom the CE home page:\n\n> \"The Consumer Expenditure Surveys (CE) program provides data on expenditures, income, and demographic characteristics of consumers in the United States. The CE program provides these data in tables, LABSTAT database, news releases, reports, and public use microdata files.\n\n> CE data are collected by the Census Bureau for BLS in two surveys, the Interview Survey for major and/or recurring items and the Diary Survey for more minor or frequently purchased items. CE data are primarily used to revise the relative importance of goods and services in the market basket of the Consumer Price Index. The CE is the only Federal household survey to provide information on the complete range of consumers' expenditures and incomes. Here is an overview of the CE program and its methods.\"\n\nSome important things to note are that expenditure data are collected through two different survey instruments (Diary and Interview), expenditure categories are organized hierarchically, and data are stored across thousands of files to which the CE provides access through their website. Also, given the length of the program, it would be difficult to harmonize data across all those years and files, so there are some inconsistencies in the way data are stored, which `cepumd` seeks to address (more on this further down).\n\nPlease visit the following pages to learn more about the CE program overall and CE PUMD more specifically.\n\n-   CE homepage: (<https://www.bls.gov/cex/)>\n-   CE PUMD page: (<https://www.bls.gov/cex/pumd.htm)>\n-   CE PUMD Getting Started Guide: <https://www.bls.gov/cex/pumd-getting-started-guide.htm>\n-   CE Dictionary for Interview and Diary Surveys (XLSX download) (<https://www.bls.gov/cex/pumd/ce_pumd_interview_diary_dictionary.xlsx)>\n-   CE PUMD published tables: (<https://www.bls.gov/cex/tables.htm)>\n-   CE PUMD Handbook of Methods: <https://www.bls.gov/opub/hom/cex/>\n-   CE Frequently Asked Questions: <https://www.bls.gov/cex/csxfaqs.htm>\n\n## Challenges addressed by cepumd\n\n`cepumd` seeks to address challenges in three categories: data gathering/organization; managing data inconsistencies; and calculating weighted, annual metrics.\n\n-   **Data wrangling**\n    -   Convert hierarchical grouping (HG) files to data tables using `ce_hg()`\n    -   Help the user identify the Universal Classification Codes (UCCs) related to their analysis using a combination of `ce_hg()` and `ce_uccs()`\n    -   Combine all required files and variables using `ce_prepdata()`\n-   **Managing data inconsistencies**\n    -   Provide the ability to re-code variable categories using the CE Dictionary for Interview and Diary Surveys\n    -   Resolve some inconsistencies such as differences code definitions between the Interview and Diary (check the definitions of the \"FAM_TYPE\" variable categories in 2015 for an example)\n    -   Provide useful errors or warnings when there are multiple categories of something the user is trying to access, e.g., some titles in the hierarchical grouping files (\"stub\" or \"HG\" files) repeat and requires more careful selection of UCCs\n-   **Calculating weighted, annual metrics**\n    -   Calculate a mean expenditure with `ce_mean()` or expenditure quantile with `ce_quantile()`\n    -   Account for the factor (annual vs. quarterly expenditure)\n    -   Account for the \"months in scope\" of a given consumer unit (CU)\n    -   Annualize expenditures for either Diary or Interview expenditures\n    -   Integrate Interview and Diary data as necessary\n\nSource code and other package information is available at <https://github.com/arcenis-r/cepumd>\n\n## Cautions and recommendations\n\n-   Estimates produced using PUMD, which is top-coded by the CE and has some records suppressed to protect respondent confidentiality, will not match the published estimates released by the CE in most cases. The CE's published estimates are based on confidential data that are not top-coded nor have records suppressed. You can learn more at [CE Protection of Respondent Confidentiality](https://www.bls.gov/cex/pumd_disclosure.htm).\n\n-   When calculating estimates for sub-samples or cross-sections of data it is best to stick to the combinations of variables that the CE uses in it's publication tables, e.g., income, geography, composition of CU, size of CU. This is because CE data are collected using a [stratified, random sample](https://www.bls.gov/opub/hom/cex/design.htm) (a.k.a., \"representative sample\") and only analyses conducted using the stratification variables are statistically valid. Using other variables can be helpful to understand spending across different groups, but unweighted estimates are likely more useful for this. `cepumd` currently does not support unweighted estimates, but data for such an analysis can be prepared using `ce_prepdata()`.\n\n-   Quantiles should only be generated using data from 1 survey instrument as the samples for the Interview and Diary are different.\n\n-   Check the expenditure category in the appropriate HG file to ensure that it is the category for which you intend to generate an estimate.\n\n-   Store an HG object in the environment and call that directly in `ce_prepdata()`.\n\n## Installation\n\nYou can install the development version of `cepumd` from its [GitHub repo](https://github.com/arcenis-r/cepumd).\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_install(\"arcenis-r/cepumd\")\n```\n:::\n\n\n## Key cepumd functions\n\n-   The workhorse of `cepumd` is `ce_prepdata()`. It merges the household characteristics file (FMLI/-D) with the corresponding expenditure tabulation file (MTBI/EXPD) for a specified year, adjusts weights for months-in-scope and the number of collection quarters, adjusts some cost values by their periodicity factor (some cost categories are represented as annual figures and others as quarterly). With the recent update it only requires the first 3 arguments to function: the year, the survey type, and one or more valid UCCs. `ce_prepdata()` now creates all of the other necessary objects within the function if not provided.\n\n-   There are two functions for wrangling hierarchical grouping data into more usable formats:\n\n    -   `ce_hg()` pulls the requested type of HG file (Interview, Diary, or Integrated) for a specified year.\n    -   `ce_uccs()` filters the HG file for the specified expenditure category and returns either a data frame with only that section of the HG file or the Universal Classification Codes (UCCs) that make up that expenditure category.\n\n-   There are two functions that the user can use to calculate CE summary statistics:\n\n    -   `ce_mean()` calculates a mean expenditure, standard error of the mean, coefficient of variation, and an aggregate expenditure.\n    -   `ce_quantiles()` calculates weighted expenditure quantiles. It is important to note that calculating medians for integrated expenditures is not recommended because the calculation involves using weights from both the Diary and Survey instruments.\n\n## Example workflows\n\nThe following are a few sample workflows that show how `cepumd` can be used. Before jumping into those I'll first install and load the necessary packages and store some CEPUMD files. I'll keep the path to those files in a variable called `ce_data_dir`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(knitr, readxl, tidyverse, cepumd)\n```\n:::\n\n\n### Simple workflow: Integrated pet expenditures\n\nThe following is an example of how someone might go about using `cepumd` to calculate a 2021 annual, weighted estimate of mean expenditures on pets for all of the U.S. using CE integrated data. This is just a quick and easy calculation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninteg21_hg <- ce_hg(\n  2021,\n  integrated,\n  hg_zip_path = file.path(ce_data_dir, \"stubs.zip\")\n)\n\nce_prepdata(\n  2021,\n  integrated,\n  integ21_hg,\n  uccs = ce_uccs(integ21_hg, expenditure = \"Pets\", ucc_group = \"PETS\"),\n  dia_zp = file.path(ce_data_dir, \"diary21.zip\"),\n  int_zp = c(\n    file.path(ce_data_dir, \"intrvw20.zip\"),\n    file.path(ce_data_dir, \"intrvw21.zip\")\n  )\n) |>\n  ce_mean() |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|      agg_exp| mean_exp|      se|       cv|\n|------------:|--------:|-------:|--------:|\n| 130886736176| 981.3035| 53.5767| 5.459748|\n\n\n:::\n:::\n\n\nYup... that's all it takes. I simply ran `ce_hg` to get the hierarchical grouping (stub) file for integrated expenditures for 2021; then ran `ce_prepdata()` with the year, the survey type, the stub file, uccs I needed, and the file paths to where I downloaded the data files; then I piped that directly into `ce_mean()`. An important thing to notice is that I provided two file paths to the `int_zp` argument. I did this because calculating integrated CE annual estimates actually requires 5 quarters of data from the Interview survey. Some of the data for calculating 2021 estimates is provided in the 2020 Interview data.This is one of the reasons it's important to be familiar with [CE methodology](https://www.bls.gov/cex/pumd-getting-started-guide.htm#section6) and how it changes over time when working with CE PUMD. Prior to 2020, file storing practices were different as stated in the [Getting Started Guide Interview Survey section](https://www.bls.gov/cex/pumd-getting-started-guide.htm#section3).\n\n### Slightly more advanced workflow: Used Car & Truck Expenditures by Urbanicity\n\nIn this example I'll calculate estimated annual expenditures on new and used cars by urbanicity also for 2021. Once the data are prepped with `ce_data()` I'll just nest the data by urbanicity and run `ce_means()` and `ce_quantiles()` on the nested data sets. Since the overwhelming number of reports of vehicle purchases occur in the Interview survey, I'll only use Interview data.\n\nFirst I'll get the stub file and filter it for categories involving new or used cars.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nint21_hg <- ce_hg(\n  2021,\n  interview,\n  hg_zip_path = file.path(ce_data_dir, \"stubs.zip\")\n)\n\nint21_hg |>\n  filter(str_detect(title, \"[C|c]ars\")) |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|level |title                 |ucc      |survey |factor |\n|:-----|:---------------------|:--------|:------|:------|\n|4     |Cars and trucks, new  |NEWCARS  |G      |1      |\n|5     |New cars              |450110   |I      |1      |\n|4     |Cars and trucks, used |USEDCARS |G      |1      |\n|5     |Used cars             |460110   |I      |1      |\n\n\n:::\n:::\n\n\nSo there's one UCC for \"New cars\" and one for \"Used cars\". I'll use the code above to grab those UCCs and prepare my data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar_data <- ce_prepdata(\n  2021,\n  interview,\n  int21_hg,\n  uccs = int21_hg |>\n    filter(str_detect(title, \"[C|c]ars\"), !is.na(as.numeric(ucc))) |>\n    pull(ucc),\n  bls_urbn,  # <------- this is the variable for urbanicity\n  int_zp = c(\n    file.path(ce_data_dir, \"intrvw20.zip\"),\n    file.path(ce_data_dir, \"intrvw21.zip\")\n  ),\n  recode_variables = TRUE,\n  dict_path = file.path(ce_data_dir, \"ce-data-dict.xlsx\")\n)\n\ncar_data |>\n  group_nest(bls_urbn) |>\n  mutate(ce_ann_means = map(data, ce_mean)) |>\n  select(-data) |>\n  unnest(ce_ann_means) |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|bls_urbn |      agg_exp|  mean_exp|       se|        cv|\n|:--------|------------:|---------:|--------:|---------:|\n|Urban    | 168458799558| 1341.7184| 106.2495|  7.918912|\n|Rural    |   4756065697|  591.5108| 155.0020| 26.204421|\n\n\n:::\n:::\n\n\nGetting the annual, weighted estimate of the median (or another quantile) would be just as easy. Since I'm using interview data only here (it would be bad practice to try to calculate quantiles with integrated data), this would be a good example. I'll calculate the first percentile and the median along with the 0.991 through 0.999 quantiles for the overall sample rather than breaking it down by urbanicity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nce_quantiles(\n  car_data,\n  probs = c(0.01, 0.5, 0.95, seq(0.99, 0.999, by = 0.001))\n) |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|probs | quantile|\n|:-----|--------:|\n|1.0%  |        0|\n|50.0% |        0|\n|95.0% |        0|\n|99.0% |     8300|\n|99.1% |    10000|\n|99.2% |    12434|\n|99.3% |    15000|\n|99.4% |    17850|\n|99.5% |    20000|\n|99.6% |    22948|\n|99.7% |    26593|\n|99.8% |    30000|\n|99.9% |    40000|\n\n\n:::\n:::\n\n\nAt least 95% of households in the Interview survey did not report expenditures on cars in 2021, which explains why the mean is so low.\n\n### Very advanced workflow: Inflation adjusted food away from home expenditures by household size\n\nIn this last example I'm going to assume very little knowledge about the CE. I'd like to compare mean annual expenditures on food away from home between 2010 and 2020 by household size and I want to convert expenditures to 2023 dollars using the CPI. First I'd go to the [CE PUMD Data Files](https://www.bls.gov/cex/pumd_data.htm#csv) page and download the files that I need for both years. I'll also go to the [CE PUMD Documentation](https://www.bls.gov/cex/pumd_doc.htm) page to download the hierarchical grouping files to get the UCCs for \"Food away from home\" and the CE Dictionary to find out what variable has data on the household size.\n\nWith all that done, now I want to look at the hierarchical grouping files for 2010 and 2020 for integrated data as they relate to \"Food away from home\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninteg10_hg <- ce_hg(\n  2010,\n  integrated,\n  hg_zip_path = file.path(ce_data_dir, \"stubs.zip\")\n)\n\ninteg20_hg <- ce_hg(\n  2020,\n  integrated,\n  hg_zip_path = file.path(ce_data_dir, \"stubs.zip\")\n)\n```\n:::\n\n\nFirst I'll explore the titles of the hierarchical grouping files to see if any of them mention \"food away\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninteg10_hg |>\n  filter(str_detect(str_to_lower(title), \"food away\")) |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|level |title               |ucc      |survey |factor |\n|:-----|:-------------------|:--------|:------|:------|\n|3     |Food away from home |FOODAWAY |G      |1      |\n\n\n:::\n:::\n\n\nNow I'll do the same for 2020.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninteg20_hg |>\n  filter(str_detect(str_to_lower(title), \"food away\")) |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|level |title               |ucc    |survey |factor |\n|:-----|:-------------------|:------|:------|:------|\n|3     |Food away from home |FOODAW |G      |1      |\n\n\n:::\n:::\n\n\nHere I'll take note of the title, which is the same in both years (\"Food away from home\"). I'll use that to get the UCCs for both years.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_away_uccs_10 <- integ10_hg |>\n  ce_uccs(expenditure = \"Food away from home\")\n\nfood_away_uccs_20 <- integ20_hg |>\n  ce_uccs(expenditure = \"Food away from home\")\n```\n:::\n\n\nHere's a quick look at the UCCs from 2010.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_away_uccs_10\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"190111\" \"190112\" \"190113\" \"190114\" \"190211\" \"190212\" \"190213\" \"190214\"\n [9] \"190311\" \"190312\" \"190313\" \"190314\" \"190321\" \"190322\" \"190323\" \"190324\"\n[17] \"190901\" \"190902\" \"190903\" \"790430\" \"800700\"\n```\n\n\n:::\n:::\n\n\nNow the 2020 UCCs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_away_uccs_10\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"190111\" \"190112\" \"190113\" \"190114\" \"190211\" \"190212\" \"190213\" \"190214\"\n [9] \"190311\" \"190312\" \"190313\" \"190314\" \"190321\" \"190322\" \"190323\" \"190324\"\n[17] \"190901\" \"190902\" \"190903\" \"790430\" \"800700\"\n```\n\n\n:::\n:::\n\n\nThe vectors of UCCs look identical, but I'll keep both just to be cautious.\n\nNext I'll turn to finding the variable for household size in the CE data dictionary. It's important to remember that the dictionary is stored as an \"XLSX\" file. I'll use functions from the `readxl` package to work with the dictionary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexcel_sheets(file.path(ce_data_dir, \"ce-data-dict.xlsx\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Cover\"     \"Variables\" \"Codes \"   \n```\n\n\n:::\n:::\n\n\nNow I'll see what variables contain anything about the number of household members. To do that I'll have to load the sheet from the dictionary containing the variable definitions. I also want to filter the variable data to only the FMLI where the \"Last year\" column is missing, i.e., the variable definition is still in use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nce_variables <- read_excel(\n  file.path(ce_data_dir, \"ce-data-dict.xlsx\"),\n  sheet = \"Variables\"\n)\n\nce_variables |>\n  filter(\n    str_detect(File, \"FMLI\"),\n    str_detect(\n      tolower(`Variable description`), \"number of members\"\n    )\n  ) |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|Survey    |File |Variable Name |Variable description                |Formula         |Flag name |Section number |Section description                                                  |Section part | First year| First Quarter| Last quarter| Last year|Comment |\n|:---------|:----|:-------------|:-----------------------------------|:---------------|:---------|:--------------|:--------------------------------------------------------------------|:------------|----------:|-------------:|------------:|---------:|:-------|\n|INTERVIEW |FMLI |AS_COMP5      |Number of members under age 2 in CU |COUNT (AGE < 2) |AS_C_MP5  |NA             |CU characteristics, income, weights, and summary level expenditures. |NA           |       1984|             1|           NA|        NA|NA      |\n|INTERVIEW |FMLI |AS_COMP5      |Number of members under age 2 in CU |NA              |AS_C_MP5  |NA             |CU characteristics, income, weights, and summary level expenditures. |NA           |       1980|             1|            4|      1981|NA      |\n|INTERVIEW |FMLI |FAM_SIZE      |Number of Members in CU             |NA              |FAM__IZE  |NA             |CU characteristics, income, weights, and summary level expenditures. |NA           |       1984|             1|           NA|        NA|NA      |\n|INTERVIEW |FMLI |FAM_SIZE      |Number of Members in CU             |NA              |FAM__IZE  |NA             |CU characteristics, income, weights, and summary level expenditures. |NA           |       1980|             1|            4|      1981|NA      |\n\n\n:::\n:::\n\n\nIt looks like FAM_SIZE is the variable I want. I can see that this variable was used from 1980 through 1981 then was dropped and re-introduced in 1984 and has been in use since. So it looks like it's available for my 2 years of interest. Next I'll check whether the FAM_SIZE variable has any value codes associated with it. I'll have to pull in the \"Codes\" sheet. (Check your spelling here.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nce_codes <- read_excel(\n  file.path(ce_data_dir, \"ce-data-dict.xlsx\"),\n  sheet = \"Codes \"\n)\n\nce_codes |>\n  filter(File %in% \"FMLI\", Variable %in% \"FAM_SIZE\") |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|Survey |File |Variable |Code value |Code description | First year| First quarter| Last year| Last quarter|Comment |...11 |\n|:------|:----|:--------|:----------|:----------------|----------:|-------------:|---------:|------------:|:-------|:-----|\n\n\n:::\n:::\n\n\nIt looks like FAM_SIZE is not a coded variable (no observations in the \"Codes\" sheet), so it must be numeric. With all that, I'm ready to prepare my data. I'll start by preparing the 2010 data and getting a summary of the FAM_SIZE variable since it is a continuous variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_away_data_10 <- ce_prepdata(\n  2010,\n  integrated,\n  integ10_hg,\n  food_away_uccs_10,\n  dia_zp = file.path(ce_data_dir, \"diary10.zip\"),\n  int_zp = file.path(ce_data_dir, \"intrvw10.zip\"),\n  fam_size\n)\n\nsummary(food_away_data_10$fam_size)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   1.000   2.000   2.666   4.000  14.000 \n```\n\n\n:::\n:::\n\n\nSince some households have as many as 14 people, I'll create a FAM_SIZE label with any number greater than 4 taking on the value \"5+\". Next, I'll prepare the 2020 data and row bind it with the 2010 data as well as create the \"fam_size_label\" variable. I'm also going to convert \"ref_mo\" and \"ref_yr\" to character to make it compatible with the CPI data that I'll get later. I'll also take a look at just a snippet of the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_away_data_20 <- ce_prepdata(\n  2020,\n  integrated,\n  integ10_hg,\n  food_away_uccs_20,\n  dia_zp = file.path(ce_data_dir, \"diary20.zip\"),\n  int_zp = c(\n    file.path(ce_data_dir, \"intrvw19.zip\"),\n    file.path(ce_data_dir, \"intrvw20.zip\")\n  ),\n  fam_size\n)\n\nfood_away_comp_data <- food_away_data_10 |>\n  mutate(year = \"2010\") |>\n  bind_rows(food_away_data_20 |> mutate(year = \"2020\")) |>\n  mutate(\n    fam_size_label = if_else(fam_size > 4, \"5+\", as.character(fam_size)),\n    ref_yr = as.character(ref_yr)\n  )\n\nfood_away_comp_data |>\n  select(survey, year, newid, finlwt21, cost, ucc, ref_yr, ref_mo) |>\n  filter(!is.na(ucc)) |>\n  group_by(year, survey) |>\n  slice_sample(n = 3) |>\n  ungroup() |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|survey |year |newid    | finlwt21|      cost|ucc    |ref_yr | ref_mo|\n|:------|:----|:--------|--------:|---------:|:------|:------|------:|\n|D      |2010 |01047471 | 43881.11|   2.30971|190321 |2010   |      1|\n|D      |2010 |01077871 | 24204.65|  66.30000|190111 |2010   |      5|\n|D      |2010 |01116361 | 62846.94|  18.33000|190313 |2010   |      8|\n|I      |2010 |02265533 | 12788.96| 144.00000|790430 |2010   |     10|\n|I      |2010 |02309802 | 22657.97|  33.33333|790430 |2010   |      7|\n|I      |2010 |02247652 | 15588.84|  52.00000|790430 |2010   |      3|\n|D      |2020 |04630171 | 33468.71| 523.51000|190211 |2020   |     11|\n|D      |2020 |04591042 | 60503.51| 137.67000|190311 |2020   |      8|\n|D      |2020 |04436801 | 49119.67| 156.00000|190112 |2020   |      2|\n|I      |2020 |04316443 | 16358.45|  52.00000|800700 |2020   |      6|\n|I      |2020 |04227663 | 27787.28| 100.00000|190901 |2020   |      1|\n|I      |2020 |04234823 | 28645.27|  92.00000|790430 |2020   |      1|\n\n\n:::\n:::\n\n\nI'll now get CPI data for the years in the analysis and for 2023 to set as a base using the `blsR` package (<https://github.com/groditi/blsR>). I'm going to use the \"All Urban Consumers (Current Series)\" series, which has series ID \"CUUR0000SA0\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncpi_data <- blsR::get_series(\n  \"CUUR0000SA0\",\n  start_year = 2010,\n  end_year = 2023\n) |>\n  pluck(\"data\") |>\n  map(\n    \\(x) list_flatten(x) |>\n      enframe() |>\n      filter(!name %in% \"footnotes\") |>\n      unnest(value) |>\n      pivot_wider(values_from = value, names_from = name)\n  ) |>\n  list_rbind() |>\n  rename(cpi = \"value\") |>\n  mutate(month = match(periodName, month.name))\n\ncpi_base <- cpi_data |> filter(year %in% \"2023\", month %in% \"12\")\n\ncpi_data <- cpi_data |> filter(year %in% unique(food_away_comp_data$ref_yr))\n\ncpi_data |> slice(1:10) |> kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|year |period |periodName |cpi     | month|\n|:----|:------|:----------|:-------|-----:|\n|2021 |M12    |December   |278.802 |    12|\n|2021 |M11    |November   |277.948 |    11|\n|2021 |M10    |October    |276.589 |    10|\n|2021 |M09    |September  |274.310 |     9|\n|2021 |M08    |August     |273.567 |     8|\n|2021 |M07    |July       |273.003 |     7|\n|2021 |M06    |June       |271.696 |     6|\n|2021 |M05    |May        |269.195 |     5|\n|2021 |M04    |April      |267.054 |     4|\n|2021 |M03    |March      |264.877 |     3|\n\n\n:::\n:::\n\n\nThe base that I'm going to covert to is December 2023.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncpi_base |> kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|year |period |periodName |cpi     | month|\n|:----|:------|:----------|:-------|-----:|\n|2023 |M12    |December   |306.746 |    12|\n\n\n:::\n:::\n\n\nNext I'm going to join the CPI data to the CE data and adjust the \"cost\" variable for inflation. Note that I replace resulting missing values in the \"cost\" variable with \"0\". Missing values will result when I multiply a cost of \"0\" by an adjustment factor and `ce_mean()` will not function with missing values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_away_comp_data <- food_away_comp_data |>\n  left_join(\n    select(cpi_data, year, month, cpi),\n    by = c(\"ref_yr\" = \"year\", \"ref_mo\" = \"month\")\n  ) |>\n  mutate(\n    base_cpi = pull(cpi_base, cpi),\n    across(c(base_cpi, cpi), as.numeric),\n    cost = cost * (base_cpi / cpi) |> replace_na(0)\n  )\n\nfood_away_comp_data |>\n  select(survey, year, newid, finlwt21, cost, ucc, ref_yr, ref_mo) |>\n  filter(!is.na(ucc)) |>\n  group_by(year, survey) |>\n  slice_sample(n = 3) |>\n  ungroup() |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|survey |year |newid    |  finlwt21|       cost|ucc    |ref_yr | ref_mo|\n|:------|:----|:--------|---------:|----------:|:------|:------|------:|\n|D      |2010 |01062182 | 31911.373|  632.33499|190111 |2010   |      4|\n|D      |2010 |01132291 | 42762.166|   75.39493|190312 |2010   |      9|\n|D      |2010 |01151261 | 34508.670|   71.78432|190321 |2010   |     11|\n|I      |2010 |02222433 |  3456.019|   33.02286|790430 |2010   |      2|\n|I      |2010 |02202583 | 14948.874|  233.51876|190903 |2010   |      2|\n|I      |2010 |02183355 | 15016.399|  703.51037|190903 |2010   |      7|\n|D      |2020 |04433811 | 74006.452|   63.35846|190311 |2020   |      2|\n|D      |2020 |04438592 | 32749.351|   64.59171|190211 |2020   |      2|\n|D      |2020 |04636492 | 41910.471|  306.47607|190211 |2020   |     11|\n|I      |2020 |04291913 | 70403.081|  356.52248|190903 |2020   |      3|\n|I      |2020 |04386872 | 20595.360| 1181.86902|800700 |2020   |      2|\n|I      |2020 |04683051 | 33054.288|  280.67215|800700 |2020   |     12|\n\n\n:::\n:::\n\n\nThe next step is to calculate means, for which I'll use some more Tidyverse functions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_away_means <- food_away_comp_data |>\n  group_nest(year, fam_size_label, .key = \"data\") |>\n  mutate(ce_mn_df = map(data, ce_mean)) |>\n  select(-data) |> \n  unnest(ce_mn_df) |>\n  mutate(lower = mean_exp - cv, upper = mean_exp + cv)\n\nfood_away_means |> kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|year |fam_size_label |      agg_exp| mean_exp|        se|       cv|    lower|    upper|\n|:----|:--------------|------------:|--------:|---------:|--------:|--------:|--------:|\n|2010 |1              |  77335813000| 2207.926|  87.23315| 3.950909| 2203.975| 2211.877|\n|2010 |2              | 137538943234| 3479.533| 102.54849| 2.947192| 3476.585| 3482.480|\n|2010 |3              |  70833802054| 4028.171| 187.60152| 4.657238| 4023.514| 4032.829|\n|2010 |4              |  78621552689| 4994.423| 196.31421| 3.930669| 4990.492| 4998.354|\n|2010 |5+             |  60764779535| 4668.419| 252.13159| 5.400792| 4663.018| 4673.820|\n|2020 |1              |  67173826416| 1713.043|  84.53129| 4.934569| 1708.108| 1717.977|\n|2020 |2              | 122787510310| 2825.619| 131.55436| 4.655771| 2820.963| 2830.275|\n|2020 |3              |  61184160903| 3170.855| 203.25085| 6.409971| 3164.445| 3177.265|\n|2020 |4              |  68948170493| 4210.973| 262.49920| 6.233695| 4204.739| 4217.206|\n|2020 |5+             |  48767026459| 3737.376| 327.18302| 8.754351| 3728.622| 3746.130|\n\n\n:::\n:::\n\n\nPlotting these data would be pretty straightforward, as well.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_away_means |>\n  ggplot(aes(x = fam_size_label, y = mean_exp, fill = year, group = year)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.8) +\n  geom_errorbar(\n    aes(ymin = lower, ymax = upper),\n    width = 0.4,\n    position = position_dodge(0.75)\n  ) +\n  scale_fill_manual(values = c(\"red\", \"blue\")) +\n  scale_y_continuous(labels = scales::dollar) +\n  labs(\n    title =\n      \"Estimated annual mean food away from home expenditures by CU size\",\n    x = \"CU size\",\n    y = \"Estimated, weighted, annual mean expenditure\",\n    fill = \"Year\"\n  ) +\n  theme_bw() +\n  theme(plot.title = element_text(hjust = 0.5), legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](cepumd-intro_files/figure-html/plot-food-away-means-1.png){width=672}\n:::\n:::\n\n\nHere we can see that on an inflation-adjusted basis, households of all sizes had higher expenditures on food away from home in 2010 than they did in 2020.\n\nNow I'll generate a plot of the expenditures at each weighted, annual, estimated quantile (from 0.01 through 0.99, by 0.01) for the same years, but only using Diary data, since most of the UCCs (16 out of 21) in the \"food away from home\" category come from the Diary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfood_away_comp_quantiles <- map2(\n  c(2010, 2020),\n  c(\n    file.path(ce_data_dir, \"diary10.zip\"),\n    file.path(ce_data_dir, \"diary20.zip\")\n  ),\n  \\(x, y) {\n    dia_hg <- ce_hg(\n      x,\n      diary,\n      hg_zip_path = file.path(ce_data_dir, \"stubs.zip\")\n    )\n    \n    food_uccs <- ce_uccs(dia_hg, expenditure = \"Food away from home\")\n    \n    ce_prepdata(\n      x,\n      diary,\n      dia_hg,\n      food_uccs,\n      dia_zp = y\n    ) |>\n      mutate(year = x, ref_yr = as.character(ref_yr))\n  }\n) |>\n  list_rbind() |>\n  left_join(\n    select(cpi_data, year, month, cpi),\n    by = c(\"ref_yr\" = \"year\", \"ref_mo\" = \"month\")\n  ) |>\n  mutate(year = factor(year)) |>\n  nest(data = -year) |>\n  mutate(\n    fa_qtile = map(data, ce_quantiles, probs = c(seq(0, 0.95, by = 0.05), 0.99))\n  ) |>\n  select(-data) |>\n  unnest(fa_qtile) |>\n  mutate(probs = parse_number(probs) / 100)\n\nfood_away_comp_quantiles |>\n  ggplot(aes(x = probs, y = quantile, group = year, color = year)) +\n  geom_line() +\n  scale_color_manual(values = c(\"red\", \"blue\")) +\n  scale_x_continuous(labels = scales::percent) +\n  scale_y_continuous(labels = scales::dollar) +\n  labs(\n    title =\n      \"Estimated, annual food away from home expenditure quantiles\",\n    x = \"Quantile\",\n    y = \"Estimated, weighted, annual expenditure\",\n    color = \"Year\"\n  ) +\n  theme_bw() +\n  theme(plot.title = element_text(hjust = 0.5), legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](cepumd-intro_files/figure-html/plot-food-away-quantiles-1.png){width=672}\n:::\n:::\n\n\nInterestingly the expenditures don't appear to have changed much between 2010 and 2020 across quantiles on an inflation-adjusted basis, but we can see that across all quantiles, CU's spent less in 2020 than they did in 2010 on food away from home, which is consistent with the means that we calculated above. There are a lot of 0-value reported expenditures, though, in the CE on food away from home. Unfortunately, I can't perform an analysis using only respondents that did have expenditures in this category, i.e., dropping the 0's, because whether someone had an expenditure on food away from home is not one of the variables used for generating the survey weights. In other words, the analysis can be done, but it would not be statistically valid and I definitely wouldn't be able to infer from it. This is just another cautionary note to anyone using this package who might use it in a way that does not follow statistically sound practices. Please visit the [CE's website](https://www.bls.gov/cex/) and read the [CE PUMD Getting Started Guide](https://www.bls.gov/cex/tables.htm) for more information.\n\n### Dealing with inconsistent code definitions\n\nIn this workflow I'm going to calculate estimated mean utilities expenditures for 2015 using integrated data by CU composition using the FAM_TYPE variable. In this case I'm going to start by looking at the codes for that variable to show how one might run into an inconsistency in code definitions across survey instruments. First I'm going to set up a sub-directory in my temporary directory and store what I'll need to get started.\n\nFirst, I'll look at code descriptions for the \"FAM_TYPE\" variable in the dictionary and I'm going to focus on the code values of 3, 5, and 7. I still have the `ce_codes` object in memory, so I'll just use that.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nce_codes |>\n  janitor::clean_names() |>\n  filter(\n    variable %in% \"FAM_TYPE\",\n  first_year <= 2015,\n  (last_year >= 2015 | is.na(last_year)),\n  code_value %in% c(\"3\", \"5\", \"7\")\n  ) |>\n  select(survey, code_value, code_description) |>\n  arrange(code_value, survey) |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|survey    |code_value |code_description                                           |\n|:---------|:----------|:----------------------------------------------------------|\n|DIARY     |3          |Married couple, own children only,  oldest child > 6, < 18 |\n|INTERVIEW |3          |Married Couple, own children only oldest child >= 6, <= 17 |\n|DIARY     |5          |All other Married couple families                          |\n|INTERVIEW |5          |All other Husband and wife families                        |\n|DIARY     |7          |One parent, female, own children, at least one age < 18    |\n|INTERVIEW |7          |One parent, female, own children, at least one age < 18    |\n\n\n:::\n:::\n\n\nThe code descriptions for these 3 code values are different across instruments. To resolve this I'm going to create a table containing only codes from the Interview survey.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfam_type_codes <- ce_codes |>\n  janitor::clean_names() |>\n  filter(\n    variable %in% \"FAM_TYPE\",\n    first_year <= 2015,\n    (last_year >= 2015 | is.na(last_year))\n  )\n\ncodes2keep <- fam_type_codes |>\n  filter(survey %in% \"INTERVIEW\") |>\n  select(code_value, code_description)\n\nfam_type_codes <- fam_type_codes |>\n  select(-code_description) |>\n  left_join(codes2keep, by = \"code_value\") |>\n  relocate(code_description, .after = code_value)\n\nfam_type_codes |>\n  filter(code_value %in% c(\"3\", \"5\", \"7\")) |>\n  select(survey, code_value, code_description) |>\n  arrange(code_value, survey) |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|survey    |code_value |code_description                                           |\n|:---------|:----------|:----------------------------------------------------------|\n|DIARY     |3          |Married Couple, own children only oldest child >= 6, <= 17 |\n|INTERVIEW |3          |Married Couple, own children only oldest child >= 6, <= 17 |\n|DIARY     |5          |All other Husband and wife families                        |\n|INTERVIEW |5          |All other Husband and wife families                        |\n|DIARY     |7          |One parent, female, own children, at least one age < 18    |\n|INTERVIEW |7          |One parent, female, own children, at least one age < 18    |\n\n\n:::\n:::\n\n\nNow the codes are consistent across survey instruments and I can use this code-book in my call to `ce_prepdata()` using the \"own_code-book\" argument. Then I'll pass that to `ce_mean()` per usual.\n\nNext I'll get some information about how utilities expenditures are organized using the stub file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninteg15_hg <- ce_hg(\n  2015,\n  integrated,\n  hg_zip_path = file.path(ce_data_dir, \"stubs.zip\")\n)\n\ninteg15_hg |>\n  filter(str_detect(str_to_lower(title), \"utilities\")) |>\n  kable(bookmarks = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|level |title                                 |ucc   |survey |factor |\n|:-----|:-------------------------------------|:-----|:------|:------|\n|3     |Utilities, fuels, and public services |UTILS |G      |1      |\n\n\n:::\n:::\n\n\nThe expenditure category associated with utilities is \"Utilities, fuels, and public services\". I'll store that title to work with later and narrow down the section of the stub file that includes only these expenditures.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nutilities_title <- integ15_hg |>\n  filter(str_detect(str_to_lower(title), \"utilities\")) |>\n  pull(title)\n\nutilities_hg <- ce_uccs(\n  integ15_hg,\n  expenditure = utilities_title,\n  uccs_only = FALSE\n)\n\nutilities_hg |> kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|level |title                                            |ucc    |survey |factor |\n|:-----|:------------------------------------------------|:------|:------|:------|\n|3     |Utilities, fuels, and public services            |UTILS  |G      |1      |\n|4     |Natural gas                                      |NATRLG |G      |1      |\n|5     |Utility-natural gas (renter)                     |260211 |I      |1      |\n|5     |Utility-natural gas (owned home)                 |260212 |I      |1      |\n|5     |Utility-natural gas (owned vacation)             |260213 |I      |1      |\n|5     |Utility-natural gas (rented vacation)            |260214 |I      |1      |\n|4     |Electricity                                      |ELECTR |G      |1      |\n|5     |Electricity (renter)                             |260111 |I      |1      |\n|5     |Electricity (owned home)                         |260112 |I      |1      |\n|5     |Electricity (owned vacation)                     |260113 |I      |1      |\n|5     |Electricity (rented vacation)                    |260114 |I      |1      |\n|4     |Fuel oil and other fuels                         |OTHRFU |G      |1      |\n|5     |Fuel oil                                         |FUELOI |G      |1      |\n|6     |Fuel oil (renter)                                |250111 |I      |1      |\n|6     |Fuel oil (owned home)                            |250112 |I      |1      |\n|6     |Fuel oil (owned vacation)                        |250113 |I      |1      |\n|6     |Fuel oil (rented vacation)                       |250114 |I      |1      |\n|5     |Coal, wood, and other fuels                      |CLWDOT |G      |1      |\n|6     |Coal, wood, other fuels (renter)                 |250911 |I      |1      |\n|6     |Coal, wood, other fuels (owned home)             |250912 |I      |1      |\n|6     |Coal, wood, other fuels (owned vacation)         |250913 |I      |1      |\n|6     |Coal, wood, other fuels (rented vacation)        |250914 |I      |1      |\n|5     |Bottled gas                                      |BOTTLG |G      |1      |\n|6     |Gas, btld/tank (renter)                          |250211 |I      |1      |\n|6     |Gas, btld/tank (owned home)                      |250212 |I      |1      |\n|6     |Gas, btld/tank (owned vacation)                  |250213 |I      |1      |\n|6     |Gas, btld/tank (rented vacation)                 |250214 |I      |1      |\n|4     |Telephone services                               |PHONE  |G      |1      |\n|5     |Residential phone service, VOIP, and phone cards |RESPHO |G      |1      |\n|6     |Phone cards                                      |270104 |I      |1      |\n|6     |Residential telephone including VOIP             |270106 |I      |1      |\n|5     |Cellular phone service                           |270102 |I      |1      |\n|4     |Water and other public services                  |WATER  |G      |1      |\n|5     |Water and sewerage maintenance                   |SEWER  |G      |1      |\n|6     |Water/sewer maint. (renter)                      |270211 |I      |1      |\n|6     |Water/sewer maint. (owned home)                  |270212 |I      |1      |\n|6     |Water/sewer maint. (owned vacation)              |270213 |I      |1      |\n|6     |Water/sewer maint. (rented vacation)             |270214 |I      |1      |\n|5     |Trash and garbage collection                     |TRASH  |G      |1      |\n|6     |Trash/garb. coll. (renter)                       |270411 |I      |1      |\n|6     |Trash/garb. coll. (owned home)                   |270412 |I      |1      |\n|6     |Trash/garb. coll. (owned vacation)               |270413 |I      |1      |\n|6     |Trash/garb. coll. (rented vacation)              |270414 |I      |1      |\n|5     |Septic tank cleaning                             |SEPTAN |G      |1      |\n|6     |Septic tank clean. (renter)                      |270901 |I      |1      |\n|6     |Septic tank clean. (owned home)                  |270902 |I      |1      |\n|6     |Septic tank clean. (owned vacation)              |270903 |I      |1      |\n|6     |Septic tank clean. (rented vacation)             |270904 |I      |1      |\n\n\n:::\n:::\n\n\nI also want to know what survey instruments the expenditures are collected through for published estimates. My stub file is the integrated stub file, so I should see both \"I\" and \"D\" in the survey column of the stub file if expenditures are collected through both instruments.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nutilities_hg |> distinct(survey) |> kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|survey |\n|:------|\n|G      |\n|I      |\n\n\n:::\n:::\n\n\nIt seems utilities expenditures are collected only through the Interview survey, so I'll only need to use Interview data files to calculate estimates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfam_type_utilities <- ce_prepdata(\n  2015,\n  interview,\n  utilities_hg,\n  uccs = ce_uccs(utilities_hg, expenditure = utilities_title),\n  fam_type, \n  int_zp = file.path(ce_data_dir, \"intrvw15.zip\"),\n  recode_variables = TRUE,\n  dict_path = file.path(ce_data_dir, \"ce-data-dict.xlsx\")\n) |>\n  group_nest(fam_type) |>\n  mutate(ce_mean_df = map(data, ce_mean)) |>\n  select(-data) |>\n  unnest(ce_mean_df)\n\nfam_type_utilities |>\n  arrange(fam_type) |>\n  kable(booktabs = TRUE)\n```\n\n::: {.cell-output-display}\n\n\n|fam_type                                                   |      agg_exp| mean_exp|        se|        cv|\n|:----------------------------------------------------------|------------:|--------:|---------:|---------:|\n|Married Couple only                                        | 122623482952| 4378.377|  76.25699|  1.741673|\n|Married Couple, own children only, oldest child < 6        |  21592090354| 4073.529| 241.48233|  5.928087|\n|Married Couple, own children only oldest child >= 6, <= 17 |  73899626502| 5136.781| 132.53306|  2.580080|\n|Married Couple, own children only, oldest child > 17       |  53687574363| 5585.027| 190.15164|  3.404668|\n|All other Husband and wife families                        |  26767356778| 5699.177| 331.83382|  5.822487|\n|One parent, male, own children at least one age < 18       |   4647315390| 3887.863| 532.21229| 13.689069|\n|One parent, female, own children, at least one age < 18    |  22862016917| 3684.480| 237.12762|  6.435851|\n|Single consumers                                           |  88002147354| 2348.182|  40.59815|  1.728919|\n|Other families                                             |  84986387660| 3942.345| 122.97865|  3.119429|\n\n\n:::\n:::\n\n\nAnd finally, a quick lollipop plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfam_type_utilities |>\n  mutate(fam_type = fct_reorder(fam_type, mean_exp)) |>\n  ggplot(aes(x = mean_exp, y = fam_type, mean_exp)) +\n  geom_segment(aes(x = 0, xend = mean_exp, yend = fam_type)) +\n  geom_point(color = \"red\", size = 5) +\n  scale_y_discrete(labels = function(x) str_wrap(x, width = 25)) +\n  scale_x_continuous(labels = scales::dollar) +\n  labs(\n    y = \"CU composition (FAM_TYPE)\",\n    x = \"Estimated, weighted, annual mean expenditure\",\n    title =\n      \"Estimated annual mean utilities expenditures by CU composition\"\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](cepumd-intro_files/figure-html/plot-fam-type-utilities-1.png){width=672}\n:::\n:::\n\n\n## Conclusion\n\nThat wraps up this introduction to `cepumd`. Thank you for taking a look. If you find any bugs, please report them on the [Github repo issues section](https://github.com/arcenis-r/cepumd/issues).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}